Alternate Palindrome
Description

Given a string s of length n, find out if it's possible to make it palindrome by rearranging their characters.

Print "Yes" if it is possible else "No" (without quotes).


Input
The first line of the input contains one integer t (1 ≤ t ≤ 1000) — the number of test cases. Then t test cases follow.

The first line of each test case contains a single integer n (1 ≤ n ≤ 1000) — the length of the string

The second line of each test case contains the string s.


Output
For each test case, print the answer: Yes or No.


Sample Input 1

3
1
a
3
aab
4
abbb
Sample Output 1

Yes
Yes
No


SOLUTION-----------------------------------------------------------------------------------------



import java.util.*;

 class Main{
    public static void main(String [] args){
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        for(int i=0; i<n; i++)
        {
            int s=sc.nextInt();
            char[] arr = sc.next().toCharArray();
            System.out.println(palindrome(arr,s));
        }
}

    public static String palindrome(char[] arr, int s){
        Map<Character, Integer> map = new HashMap<>();
        for(int i=0; i<s; i++)
        {
            if(map.containsKey(arr[i]))
            {
                map.put(arr[i],map.get(arr[i])+1);
            }
            else{
                map.put(arr[i],1);
            }
        }
        int c=0;
        for(char ch:map.keySet()){
            if(map.get(ch)%2 != 0){
                c++;
            }
            if (c>1){

                return "No";
            }
        }

        return "Yes";
    }

 }
