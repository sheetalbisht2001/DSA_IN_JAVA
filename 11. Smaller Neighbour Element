Smaller Neighbour Element


Description

Given an array, find the nearest smaller element G[i] for every element A[i] in the array such that the element has an index smaller than i.

Mathematically,

G[i] for an element A[i] is an element A[j] such that

j is maximum possible AND

j < i AND

A[j] < A[i]

Note: Elements for which no smaller element exist, consider next smaller element as -1.


Input
Input Format:

First line contains an integer N denoting the number of elements in the array (not necessarily distinct).

Second line contains N space separated integers denoting the elements of the array.

Constraints:

N <= 100000


Output
Print N space separated integers denoting the array G.


Sample Input 1

8
39 27 11 4 24 32 32 1


Sample Output 1

-1 -1 -1 -1 4 24 24 -1


SOLUTION------------------------------------------------------------------------------------------------


//Enter code here
import java.util.*;
class Main {
    public static void  smallerElement(int n,int[] arr1){
        Stack<Integer> stk=new Stack<>();

        int arr[]=new int[n];
        for(int i=0; i<n; i++)
        {
            while(!stk.isEmpty() && stk.peek()>=arr1[i])
            {
                stk.pop();
            }
            if(i<n)
            {
                if(!stk.isEmpty()) arr[i]=stk.peek();
                else
                arr[i]=-1;
            }
            stk.push(arr1[i]);
        }
        for(int i=0; i<arr.length; i++) {
            System.out.print(arr[i]+ " ");
        }
         System.out.println();
    }


    public static void main(String[] args){
        Scanner sc = new Scanner(System.in);

        int n=sc.nextInt();
        int[] arr1 = new int[n];
        for(int i=0; i<n; i++)
            arr1[i] = sc.nextInt();
            smallerElement(n,arr1);
    }
}